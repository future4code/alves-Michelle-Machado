EXERCICIO 1

a) Nesta tabela, utilizamos o FLOAT para declarar o salário, porque esta é uma forma de representar um número 
não inteiro em uma tabela. Explique os demais comandos que estão nessa query.

    PRIMARY KEY: Indica um valor unico e que não deve ser nulo
    VARCHAR: Indica os caracteres de uma string, podendo ser delmitado a 255 caracteres
    DATE: Indica Data
    NOT NULL: Os espaços não devem estar em branco

b) O comando SHOW é bem útil para nos prover informações sobre bancos, tabelas, e mais. Utilize os comandos: 
SHOW DATABASES e SHOW TABLES. Explique os resultados.

    SHOW DATABASES: Mostra os bancos de dados existentes;
    SHOW TABLES: Mostra as tabelas que estão em cada banco de dados;

c) O comando DESCRIBE pode ser usado para ver estrutura de uma tabela. Utilize o comando  DESCRIBE Actor 
e explique os resultados.

    Ao utilizar esse comando, será retornado as categorias da tabela, por exemplo: id, name, salary, gender,...
    assim como seus respectivos tipos e valores.

EXERCICIO 2

b) Escreva uma query que tente adicionar um outro elemento a tabela com o mesmo id do item anterior 002. 
Isso gerará um erro. Anote a mensagem de erro, traduza (pode usar o Google Tradutor diretamente) e 
explique porque esse erro aconteceu.

    Error Code: 1062. Duplicate entry '002' for key 'PRIMARY'   
    Quando um chave recebe o tipo PRIMARY KEY, não deve ter esse mesmo valor duplicado, ocasionando assim o erro.

    Error Code: 1136. Column count doesn't match value count at row 1
    Existem propriedades faltando ao passar as informações
    
    Error Code: 1364. Field 'name' doesn't have a default value
    O espaço de nome não pode ter valor vazio, ou seja, tanto a propriedade quanto na campo de informações está faltando o nome.
    Quando foi criado a tabela, estava escrito que deveria ter um nome como string e que o campo não poderia ser nulo.

    Error Code: 1292. Incorrect date value: '1950' for column 'birth_date' at row 1
    O valor do tipo data deve ter aspas, como se fosse uma string

EXERCICIO 3

a) Escreva uma query que retorne todas as informações das atrizes

    SELECT * from Actor WHERE gender = "female" 

b) Escreva uma query que retorne o salário do ator com o nome Tony Ramos

    SELECT salary from Actor WHERE name = "Tony Ramos"

c) Escreva uma query que retorne todas as informações que tenham o gender com o valor "invalid". Explique o resultado.

    SELECT * from Actor WHERE gender = "invalid"
    Como não existe nenhum ator ou atriz com o genero nulo ou invalido, foi retornada uma tabela com os valores nulos.

d) Escreva uma query que retorne o id, nome e salário de todos que tenham o salário com o valor máximo de R$500.000

    SELECT id, name, salary from Actor WHERE salary <= 500000

e) Tente usar a query abaixo. Você vai reparar que ela vai gerar um erro. Anote a mensagem de erro, traduza e explique 
porque esse erro aconteceu. Por fim, corrija individualmente a query para que funcione, teste o comando e anote-o
também como resposta.

    Error Code: 1054. Unknown column 'nome' in 'field list'
    Não foi achada a propriedade nome. Bastava substituir o campo por name.

    SELECT id, name from Actor WHERE id = "002"

EXERCICIO 4

    SELECT * FROM Actor
    WHERE (name LIKE "A%" OR name LIKE "J%") AND salary > 300000

 a) Explique com as suas palavras a query acima   
    A primeira linha irá selecionar todas as nformações da tabela de atores, porém na segunda linha tem uma condição.
    Só irão aparecer as informações daqueles cujos nomes começarem com A ou J e tiverem um salario maior a 300000.

b) Escreva uma query com os atores que não comecem com a letra "A" e tenham o salário maior do que R$350.000,00

    SELECT * FROM Actor
    WHERE (name NOT LIKE "A%") AND salary > 350000

c) Escreva uma query com os atores que possuam "G" ou "g" em qualquer parte do nome. 

    SELECT * FROM Actor
    WHERE name LIKE "%G%" OR name LIKE "%g%"


d) Escreva uma query com os atores que tenham a letra "a" ou "A" ou "g" ou "G" no nome e o salário entre R$350.000,00 
e R$900.000,00

    SELECT * FROM Actor
    WHERE (name LIKE "%A%" or "%a%") AND salary BETWEEN 350000  AND 900000


EXERCICIO 6 

SELECT id, title, avaliation FROM Filmes WHERE id = "003";

SELECT * FROM Filmes WHERE title = 'Se Eu Fosse Você';

SELECT id, title, sinopse FROM Filmes WHERE avaliation >= 7


EXERCICIO 7

SELECT * FROM Filmes 
WHERE title LIKE "%vida%";

SELECT * FROM Filmes 
WHERE sinopse LIKE "%Deus%" OR title LIKE "%Deus%";

SELECT * FROM Filmes
WHERE date < CURDATE();
Existe uma forma de pegar o dia atual no MySQL. Nessa linguagem, existe a possibilidade de usarmos funções existentes que fazem algumas operações ou dão alguns valores específicos. Para pegarmos o dia atual ("current date" em inglês), com a função: CURDATE. 

SELECT * FROM Filmes 
WHERE (sinopse LIKE "%Dona%" or title LIKE "%Dona%") AND avaliation > 7;


